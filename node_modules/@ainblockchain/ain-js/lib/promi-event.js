"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventEmitter = require("eventemitter3");
/**
 * A combination of a promise and an event emitter.
 * @implements {Promise<T>}
 */
var PromiEvent = /** @class */ (function () {
    function PromiEvent() {
        var _this = this;
        this.promise = new Promise(function (resolve, reject) {
            _this._resolve = resolve;
            _this._reject = reject;
        });
        this.eventEmitter = new EventEmitter();
        Object.setPrototypeOf(this, PromiEvent.prototype);
    }
    PromiEvent.prototype.then = function (onfulfilled, onrejected) {
        return this.promise.then(onfulfilled, onrejected);
    };
    PromiEvent.prototype.catch = function (onrejected) {
        return this.promise.then(onrejected);
    };
    PromiEvent.prototype.finally = function (onfinally) {
        return this.promise;
    };
    PromiEvent.prototype.resolve = function (val) { this._resolve(val); };
    PromiEvent.prototype.reject = function (reason) { this._reject(reason); };
    PromiEvent.prototype.once = function (type, handler) {
        this.eventEmitter.once(type, handler);
        return this;
    };
    ;
    PromiEvent.prototype.on = function (type, handler) {
        this.eventEmitter.on(type, handler);
        return this;
    };
    ;
    return PromiEvent;
}());
exports.PromiEvent = PromiEvent;
//# sourceMappingURL=promi-event.js.map